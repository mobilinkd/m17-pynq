

================================================================
== Vivado HLS Report for 'acg_top'
================================================================
* Date:           Sun Jul 21 12:31:55 2019

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        HLS
* Solution:       arbitrary_clock_gen_1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     5.371|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    0|    0|    0|    0|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.37>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8 0), !map !47"   --->   Operation 2 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %inc_V), !map !53"   --->   Operation 3 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @acg_top_str) nounwind"   --->   Operation 4 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %inc_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [HLS/acg_top.cpp:8]   --->   Operation 5 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [HLS/acg_top.cpp:9]   --->   Operation 6 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 7 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLatency(i32 0, i32 0, [1 x i8]* @p_str1) nounwind" [HLS/acg_top.cpp:10]   --->   Operation 8 'speclatency' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (1.00ns)   --->   "%inc_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %inc_V)" [HLS/acg_top.cpp:16]   --->   Operation 9 'read' 'inc_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%r_V = shl i32 %inc_V_read, 1" [HLS/acg_top.cpp:17]   --->   Operation 10 'shl' 'r_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%r_V_1 = shl i32 %inc_V_read, 2" [HLS/acg_top.cpp:18]   --->   Operation 11 'shl' 'r_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%r_V_2 = shl i32 %inc_V_read, 3" [HLS/acg_top.cpp:19]   --->   Operation 12 'shl' 'r_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_7 = sub i32 %r_V_2, %inc_V_read" [HLS/acg_top.cpp:23]   --->   Operation 13 'sub' 'tmp_7' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%accumulator_V_0_load = load i32* @accumulator_V_0, align 16" [HLS/acg_top.cpp:25]   --->   Operation 14 'load' 'accumulator_V_0_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (2.55ns)   --->   "%p_Val2_7 = add i32 %inc_V_read, %accumulator_V_0_load" [HLS/acg_top.cpp:25]   --->   Operation 15 'add' 'p_Val2_7' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (2.55ns)   --->   "%p_Val2_3 = add i32 %r_V, %accumulator_V_0_load" [HLS/acg_top.cpp:26]   --->   Operation 16 'add' 'p_Val2_3' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp = add i32 %inc_V_read, %r_V" [HLS/acg_top.cpp:27]   --->   Operation 17 'add' 'tmp' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 18 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%p_Val2_5 = add i32 %accumulator_V_0_load, %tmp" [HLS/acg_top.cpp:27]   --->   Operation 18 'add' 'p_Val2_5' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 19 [1/1] (2.55ns)   --->   "%p_Val2_6 = add i32 %r_V_1, %accumulator_V_0_load" [HLS/acg_top.cpp:28]   --->   Operation 19 'add' 'p_Val2_6' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp1 = add i32 %inc_V_read, %r_V_1" [HLS/acg_top.cpp:29]   --->   Operation 20 'add' 'tmp1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 21 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%p_Val2_4 = add i32 %accumulator_V_0_load, %tmp1" [HLS/acg_top.cpp:29]   --->   Operation 21 'add' 'p_Val2_4' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 22 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp2 = add i32 %r_V, %r_V_1" [HLS/acg_top.cpp:30]   --->   Operation 22 'add' 'tmp2' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 23 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%p_Val2_2 = add i32 %accumulator_V_0_load, %tmp2" [HLS/acg_top.cpp:30]   --->   Operation 23 'add' 'p_Val2_2' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 24 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%p_Val2_1 = add i32 %tmp_7, %accumulator_V_0_load" [HLS/acg_top.cpp:31]   --->   Operation 24 'add' 'p_Val2_1' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 25 [1/1] (2.55ns)   --->   "%p_Val2_s = add i32 %r_V_2, %accumulator_V_0_load" [HLS/acg_top.cpp:32]   --->   Operation 25 'add' 'p_Val2_s' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "store i32 %p_Val2_s, i32* @accumulator_V_0, align 16" [HLS/acg_top.cpp:32]   --->   Operation 26 'store' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_4 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_s, i32 31)" [HLS/acg_top.cpp:32]   --->   Operation 27 'bitselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_5 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_1, i32 31)" [HLS/acg_top.cpp:31]   --->   Operation 28 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_6 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_2, i32 31)" [HLS/acg_top.cpp:30]   --->   Operation 29 'bitselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_8 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_4, i32 31)" [HLS/acg_top.cpp:29]   --->   Operation 30 'bitselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_9 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_6, i32 31)" [HLS/acg_top.cpp:28]   --->   Operation 31 'bitselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_5, i32 31)" [HLS/acg_top.cpp:27]   --->   Operation 32 'bitselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_11 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_3, i32 31)" [HLS/acg_top.cpp:26]   --->   Operation 33 'bitselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_12 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_7, i32 31)" [HLS/acg_top.cpp:25]   --->   Operation 34 'bitselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%p_Result_s = call i8 @_ssdm_op_BitConcatenate.i8.i1.i1.i1.i1.i1.i1.i1.i1(i1 %tmp_4, i1 %tmp_5, i1 %tmp_6, i1 %tmp_8, i1 %tmp_9, i1 %tmp_10, i1 %tmp_11, i1 %tmp_12)" [HLS/acg_top.cpp:41]   --->   Operation 35 'bitconcatenate' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "ret i8 %p_Result_s" [HLS/acg_top.cpp:43]   --->   Operation 36 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 5.37ns
The critical path consists of the following:
	s_axi read on port 'inc_V' (HLS/acg_top.cpp:16) [10]  (1 ns)
	'add' operation ('tmp', HLS/acg_top.cpp:27) [18]  (0 ns)
	'add' operation ('__Val2__', HLS/acg_top.cpp:27) [19]  (4.37 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
